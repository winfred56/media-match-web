"use client"
import {steps} from "@/app/components/steps";
import {motion, useScroll, useTransform} from "framer-motion";
import {useRef} from "react";
import Link from "next/link";

const splitLetters = (input: string) => {
    const letters: string[] = [];
    const regex = /[\s\S]/gu;
    let letterMatch;

    while ((letterMatch = regex.exec(input)) !== null) {
        letters.push(letterMatch[0])
    }
    return letters;
}
export default function HowItWorks() {
    const justMatch = splitLetters(`Just Match it!`);
    const charVariant = {
        hidden: {opacity: 0},
        reveal: {opacity: 1},
    }

    const ref = useRef<HTMLElement>(null);
    const {scrollYProgress} = useScroll({
        offset: ["0 1", "1.33 1"],
        target: ref,
    })

    const scaleProgress = useTransform(scrollYProgress, [0, 1], [0.8, 1])
    const opacityProgress = useTransform(scrollYProgress, [0, 1], [0.6, 1])

    return (
        <motion.section ref={ref} style={{scale: scaleProgress, opacity: opacityProgress}}
                        className={`w-[90%] lg:w-[80%] xl:w-[60%] text-center p-2 rounded-3xl bg-gradient-to-b from-[#121212] to-[#000000] via-75%`}>
            <p className={`text-lg xl:text-xl flex items-center justify-center mt-8`}>HOW IT WORKS</p>
            <h5 className={`flex items-center justify-center gap-4 font-extrabold text-2xl xl:text-5xl mt-4`}>
                Effortless and Instant Recognition
                <span>
                        <svg width="52" height="46" viewBox="0 0 52 46" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M44.0169 38.6454C42.275 40.3339 40.2684 41.7257 38.0767 42.7656C35.9363 43.766 33.6795 44.4956 31.3585 44.9374C29.7059 45.2883 28.0265 45.4987 26.3384 45.5666C20.4005 45.7032 14.5543 44.084 9.53273 40.9118C7.30769 39.5002 5.31902 37.7467 3.63991 35.7159C2.55034 34.4084 1.64022 32.9613 0.933676 31.413C0.313407 29.831 -0.00333105 28.1463 2.64145e-05 26.447C2.64145e-05 25.3984 0.723943 25.4998 1.62377 26.1696C2.76625 27.0522 3.75005 28.123 4.53296 29.3359C5.68154 31.8508 7.38104 34.0752 9.50566 35.8444C11.727 37.7157 14.2413 39.2084 16.9478 40.2623C20.2832 41.6155 24.1734 41.7778 27.8269 41.4531C31.8688 41.1876 35.7573 39.8032 39.0577 37.4546C41.0597 35.975 42.7478 34.1122 44.0236 31.9745C45.9997 28.6422 47.1998 24.9077 47.535 21.0481C47.7413 18.0692 47.541 15.0762 46.9396 12.1514C46.8178 11.5086 46.6487 10.8862 46.5269 10.2435C46.2292 7.83492 46.3036 7.03658 47.305 6.23824C47.4882 6.05723 47.6825 5.88776 47.8868 5.73083C48.4551 5.32489 49.6526 6.11646 50.3427 7.97023C50.8942 9.3487 51.2869 10.7855 51.5131 12.2528C51.7721 13.7491 51.9281 15.2614 51.98 16.779C52.0875 19.9141 51.7619 23.0491 51.0125 26.0952C49.9075 30.8568 47.513 35.2222 44.0913 38.713L44.0169 38.6454Z"
                                fill="white"/>
                            <path
                                d="M13.0859 7.84861C13.3363 10.0407 14.6961 12.8078 16.8002 13.7753C17.7068 14.1947 19.0532 13.9309 19.2832 12.7672C19.5947 10.7161 19.1756 8.62081 18.0992 6.8473C17.6675 5.99769 17.0274 5.27144 16.2387 4.73644C15.662 4.43458 14.9776 4.41856 14.3875 4.69309C13.7973 4.96762 13.3687 5.50139 13.228 6.13692C12.6191 8.22748 15.8801 9.12054 16.489 7.02997L16.5634 6.75935L15.7854 7.77419L15.3862 7.8892L14.209 7.39531C15.3524 8.30867 16.3267 10.3789 16.0357 11.8674L18.5187 10.8525C17.4429 10.1884 16.7038 9.09451 16.489 7.84861C16.4608 6.9264 15.7198 6.18539 14.7976 6.15721C13.8666 6.16457 13.1136 6.91754 13.1062 7.84861H13.0859Z"
                                fill="white"/>
                            <path
                                d="M23.3296 3.3219C23.5867 5.5613 24.9939 8.55169 27.1454 9.55976C28.052 9.97923 29.4051 9.7086 29.6284 8.54492C29.9297 6.40819 29.4827 4.23299 28.3632 2.38825C27.9305 1.52389 27.2829 0.785332 26.4824 0.243558C25.9123 -0.058697 25.2346 -0.0807754 24.6461 0.183734C24.0575 0.448243 23.6241 0.969697 23.4717 1.59667C22.8628 3.694 26.1306 4.58706 26.7327 2.4965L26.8139 2.22587L26.0358 3.24071L25.6299 3.35572L24.4324 2.86184C25.6231 3.81578 26.665 6.09578 26.3674 7.63834L28.8503 6.63026C27.822 6.14991 26.8206 4.42469 26.7124 3.31513C26.4688 1.17721 23.0793 1.15015 23.3296 3.31513V3.3219Z"
                                fill="white"/>
                        </svg>
                    </span>
            </h5>

            <div
                className={`flex flex-col space-y-16 xl:space-y-0 xl:flex-row items-center justify-center p-12 mt-8 lg:mt-12 xl:mt-24`}>

                {steps.map((step, index) => (
                    <>
                        <div key={index}
                             className={`relative w-full flex flex-col items-center justify-center text-center`}>
                            {step.svg}
                            <div
                                className={`absolute xl:w-full top-12 flex flex-col items-center space-y-2 justify-center p-2`}>
                                <h6 className="how-heading font-extrabold flex items-center text-center justify-center">
                                    {step.heading}
                                </h6>
                                <p className={`how-subheading`}>{step.subheading}</p>
                            </div>
                        </div>
                        <svg
                            className={`${index === (steps.length - 1) ? `hidden` : `flex`} xl:w-60 rotate-90 xl:rotate-0`}
                            width="59" height="24" viewBox="0 0 59 24"
                            fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M49.9235 16.0296L47.8024 15.666L45.6707 15.3445C44.9171 15.2228 44.1568 15.1465 43.3941 15.1158C41.3632 15.0629 39.33 15.0789 37.2994 15.1095L31.212 15.2428C28.7156 15.3124 14.2194 15.3736 11.7292 15.5027C10.4825 15.5507 9.24102 15.6421 7.99677 15.7108C6.75712 15.8098 5.51314 15.8855 4.2787 16.0133C3.52178 16.0541 2.76271 16.0274 2.01053 15.9334C1.66344 15.8844 1.33395 15.75 1.05158 15.5423C0.769211 15.3346 0.542788 15.0601 0.392618 14.7434C-0.154402 13.7943 0.124789 12.6769 1.12865 12.3007C1.78067 12.0722 2.46806 11.961 3.15888 11.9725C6.27647 11.9277 9.387 11.6628 12.4673 11.1798C13.3117 10.9827 26.1805 10.9108 27.0458 10.9663C29.719 11.3325 32.3901 11.021 35.0551 11.2352C36.044 11.3111 37.0353 11.348 38.027 11.393C39.0189 11.4282 40.0112 11.4687 41.0003 11.553C44.528 11.8361 48.0425 12.2517 51.5422 12.7618C52.9292 12.9132 54.2346 13.4927 55.2773 14.4197C55.7609 14.8693 55.5949 15.784 54.9551 15.9127C54.0472 16.084 53.1259 16.1747 52.202 16.1837C51.4432 16.1549 50.6867 16.0827 49.9362 15.9675L49.9235 16.0296Z"
                                fill="white"/>
                            <path
                                d="M42.2631 18.6329C43.5815 17.8651 44.9283 17.128 46.3326 16.4634C47.0782 16.1121 47.8327 15.7756 48.579 15.4091C49.8814 14.7371 51.244 14.1886 52.6489 13.7708C54.1249 13.335 55.6538 13.1044 57.1927 13.0856L56.0166 16.8878C54.7405 16.1363 53.4752 15.3649 52.2289 14.5634C47.8704 11.756 43.6793 8.69102 39.608 5.48226C39.0035 4.97366 38.454 4.40296 37.9686 3.77957C37.7506 3.49734 37.6077 3.16448 37.5531 2.81206C37.4986 2.45963 37.5342 2.09913 37.6567 1.7642C37.9591 0.713977 38.9756 0.151009 39.9342 0.597883C40.5457 0.902944 41.1045 1.30404 41.5892 1.78592C43.8483 3.91296 46.3655 5.74799 49.0818 7.24797C49.8312 7.66527 50.65 8.03963 51.249 8.6283C53.17 10.5059 55.5507 11.7499 57.691 13.3248C57.8245 13.4221 57.958 13.5193 58.0926 13.6171L58.2685 13.7452C58.5835 13.9745 58.8145 14.3008 58.9262 14.674C59.0379 15.0472 59.0241 15.4468 58.8868 15.8114C58.7496 16.176 58.4965 16.4855 58.1664 16.6924C57.8363 16.8994 57.4475 16.9923 57.0595 16.9569C55.4981 16.8147 53.8765 17.1559 52.2725 17.6253C49.1276 18.552 46.0765 20.2668 43.1533 22.1837C42.0154 22.9915 40.6753 23.4668 39.2828 23.5567C38.6143 23.5804 38.0808 22.8198 38.4622 22.2693C39.012 21.4827 39.6439 20.7567 40.3471 20.1036C40.9588 19.5831 41.6094 19.1101 42.2931 18.6886L42.2631 18.6329Z"
                                fill="white"/>
                        </svg>
                    </>
                ))}
            </div>

            <div className={`flex flex-row item-center justify-center my-20 xl:my-40 text-xl xl:text-4xl gap-x-2`}>
                Loved
                <span className={`flex items-center justify-center`}>
                    <svg width="48" height="45" viewBox="0 0 48 45" fill="none" xmlns="http://www.w3.org/2000/svg">
<path
    d="M7.92476 20.7263C7.43599 21.8715 7.23633 23.1194 7.34336 24.36C7.50848 25.6848 7.97122 26.955 8.69694 28.0756C9.30686 28.952 10.0072 29.7619 10.7864 30.492C13.6383 33.3987 17.0336 35.7167 20.7792 37.3144C22.4699 38.0567 24.2165 38.6642 26.0028 39.1313C27.1383 39.4402 28.3102 39.6128 29.4458 39.8762C30.5813 40.1397 31.7351 40.494 32.8979 40.7847C33.6246 40.9482 33.5519 41.2389 32.8979 41.6931C32.4594 41.9703 31.9937 42.2016 31.5079 42.3835C30.8599 42.6539 30.1731 42.8195 29.473 42.8741C29.146 42.8741 28.8099 42.8741 28.4828 42.8741L27.5108 42.7651C26.8658 42.7015 26.2299 42.5743 25.5849 42.4744C24.3096 42.2403 23.0481 41.9371 21.8058 41.5659C19.3365 40.7334 16.9759 39.608 14.7744 38.2138C12.1672 36.5059 9.27834 34.8889 7.0254 32.3634C5.75339 30.9657 4.73849 29.3542 4.02754 27.6032C3.30575 25.768 3.08625 23.7737 3.39163 21.8255L3.54607 20.917L3.80951 20.0722C3.96996 19.4992 4.17655 18.9402 4.42726 18.4006C4.95988 17.2955 5.71081 16.3097 6.63477 15.5027C7.98628 14.3415 9.59706 13.5221 11.3314 13.1135C12.9933 12.6965 14.7178 12.5887 16.4187 12.7955C19.006 13.0256 21.5207 13.7732 23.8134 14.994C24.3277 15.2357 24.8201 15.5214 25.2851 15.8479C27.0021 17.1016 27.102 17.9918 26.8386 18.8912C26.7885 19.0981 26.7248 19.3014 26.6478 19.4999C26.4933 19.7815 26.1845 19.8905 25.7393 19.8814C25.1575 19.877 24.586 19.7271 24.0769 19.4454C23.6317 19.2182 23.123 19.082 22.7051 18.8367C22.2794 18.6034 21.8395 18.3971 21.3879 18.219C20.9569 18.0139 20.514 17.8349 20.0616 17.683C19.6073 17.5467 19.1531 17.3378 18.7262 17.2469C16.9971 16.7358 15.1778 16.6056 13.3936 16.8654C12.1842 17.0404 11.0294 17.4843 10.0142 18.1644C9.89608 18.2553 9.75982 18.328 9.65989 18.4188L9.35102 18.7004C9.15123 18.877 8.97149 19.075 8.81504 19.2909C8.65909 19.4915 8.51935 19.7041 8.39715 19.9268C8.26997 20.1721 8.16096 20.5082 8.03378 20.7898L7.92476 20.7263Z"
    fill="#5a5a5a"/>
<path
    d="M6.51496 12.5602C7.53776 11.8634 8.67568 11.3529 9.8762 11.0522C11.0258 10.7726 12.2111 10.6685 13.3919 10.7433C15.4894 10.8988 17.5449 11.4119 19.4694 12.2604C21.2362 13.0295 22.9375 13.941 24.5566 14.9858L25.674 15.7125L25.9284 15.9033L26.4462 16.3212C26.5698 16.4267 26.7003 16.5238 26.8368 16.6119C26.964 16.6845 27.1003 16.839 27.2184 16.7845C27.2184 16.4483 27.1275 16.1576 27.1003 15.876C27.073 15.5944 27.0185 15.3582 26.9731 15.0493C26.9731 15.0493 26.7914 14.2772 26.6915 13.723C26.5916 13.1689 26.4462 12.5239 26.3644 11.9061C26.2827 11.2884 26.2282 10.5798 26.2282 9.93481C26.2282 9.5896 26.2282 9.2444 26.2282 8.89919C26.2248 8.54622 26.2522 8.19362 26.3099 7.84539C26.4693 6.33405 27.0204 4.89049 27.9088 3.65747C28.145 3.35768 28.3812 3.03973 28.6356 2.74903L29.4713 2.0041C29.7517 1.75918 30.0561 1.54309 30.3798 1.35911C30.6977 1.17742 30.9975 0.977562 31.2882 0.804957C32.7006 0.129715 34.2763 -0.128699 35.8304 0.0600338C37.2705 0.275172 38.6397 0.825984 39.8276 1.66798C40.9176 2.42178 41.8831 3.34132 42.6892 4.39331C44.1119 6.15363 45.2101 8.15309 45.9323 10.2982C46.5803 12.3875 46.9499 14.5531 47.0315 16.7391C46.9328 22.1097 45.7525 27.4054 43.5613 32.3098C42.9345 33.8087 42.3894 33.409 42.0805 31.901C41.7102 29.5906 41.6521 27.2409 41.9079 24.915C42.2195 22.5052 42.2773 20.0694 42.0805 17.6475C42.0169 17.0661 41.9624 16.4938 41.9261 15.9215C41.8897 15.3491 41.808 14.7859 41.7081 14.2317L41.5536 13.4051L41.3447 12.5966C41.2891 12.3436 41.2162 12.0947 41.1266 11.8516C41.059 11.6084 40.9708 11.3714 40.8632 11.143C40.0766 9.22567 38.8579 7.51579 37.3021 6.1466C36.7101 5.58862 35.9892 5.18599 35.2036 4.97471C34.4876 4.82646 33.7423 4.93247 33.096 5.2745C32.1583 5.68424 31.4316 6.46345 31.0884 7.42751C30.7389 8.65471 30.6922 9.94832 30.9521 11.1975C31.052 11.9152 31.2246 12.6601 31.4063 13.4142L32.3147 17.1115C32.4419 17.7383 32.6236 18.4106 32.7145 19.0102C32.8053 19.6097 32.9052 20.2002 32.9325 20.7271C32.9383 21.2001 32.9201 21.6731 32.878 22.1443C32.8034 22.4835 32.7062 22.8173 32.5873 23.1436L32.3238 23.5978C32.2693 23.6796 32.2693 23.7522 32.1694 23.834C32.0781 23.8892 31.9757 23.9233 31.8696 23.9339C31.5438 23.9744 31.2143 23.9744 30.8885 23.9339C29.8648 23.8008 28.8889 23.4204 28.0451 22.8256C26.8278 22.008 25.6014 21.0632 24.4113 20.2729L23.5028 19.6915L22.876 19.2918L21.7859 18.6195C20.3387 17.7533 18.8189 17.0147 17.2437 16.412C15.7995 15.8284 14.2589 15.5203 12.7015 15.5036C11.8438 15.5101 10.9966 15.6925 10.2123 16.0396C9.82287 16.2089 9.45407 16.4223 9.11311 16.6755L7.98664 17.5839C6.55917 18.8068 5.58349 20.4735 5.21589 22.3169C4.68899 24.9695 5.68828 27.9674 7.55058 30.3839C9.4732 32.8584 11.9052 34.8907 14.6819 36.3433C19.0061 38.6689 23.8662 39.5773 28.7355 40.1042C29.8074 40.2132 30.8703 40.2405 31.9605 40.3222C36.003 40.6039 37.3021 40.9491 38.1833 42.1391C38.4038 42.397 38.6014 42.6736 38.7738 42.9658C39.1735 43.8743 37.4565 44.6828 34.2861 44.919C29.3923 45.2121 24.4835 44.7089 19.751 43.4291C14.5916 42.1082 9.83677 39.5374 5.9063 35.9435C4.35926 34.4838 3.03678 32.8031 1.98183 30.9562C0.832499 28.9425 0.158248 26.6929 0.0105059 24.3791C-0.0907416 21.9188 0.541674 19.484 1.82739 17.384C2.421 16.3939 3.13168 15.4789 3.94407 14.6587L4.52547 14.0591L5.15229 13.5322C5.59743 13.187 5.93356 12.86 6.46045 12.4966L6.51496 12.5602Z"
    fill="#5a5a5a"/>
</svg>
                </span>
                by music & movie lovers
            </div>

            <motion.h2 initial={`hidden`} whileInView={`reveal`}
                       transition={{staggerChildren: .02, repeat: 1, ease: "linear"}}
                       className="text-5xl font-extrabold pb-6 mt-8 lg:mt-12 xl:mt-24">
                {justMatch.map((char, index) => (
                    <motion.span key={index} transition={{duration: 0.5}}
                                 variants={charVariant}>{char}</motion.span>
                ))}
            </motion.h2>


            <button className={`cta-btn btn-big`}>
                <Link href={`#`}> Upload a media file</Link>
            </button>

            {/*<button*/}
            {/*    className={`flex gap-4 text-sm md:text-lg mt-12 xl:mt-24 border rounded-xl md:rounded-3xl px-6 py-3 md:px-10 md:py-4 */}
            {/*                hover:border-transparent hover:text-white */}
            {/*                font-semibold bg-white hover:bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 transition-all duration-300`}>*/}
            {/*    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512" fill="currentColor"*/}
            {/*         className={`w-6 md:w-8`}>*/}
            {/*        <path*/}
            {/*            d="M144 32c0-17.7 14.3-32 32-32H464c17.7 0 32 14.3 32 32V64H144V32zM96 64V32C96 14.3 110.3 0 128 0H176V64H96zM384 64H256V32c0-17.7 14.3-32 32-32H352c17.7 0 32 14.3 32 32V64zM64 64H32C14.3 64 0 78.3 0 96v32H64V64zM640 96V128H576V64H608C625.7 64 640 78.3 640 96zM64 192H0V448c0 35.3 28.7 64 64 64H576c35.3 0 64-28.7 64-64V192H576V448c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V192zm32 64v64H160V256H96zM288 256v64H352V256H288zm96 0v64H448V256H384z"/>*/}
            {/*    </svg>*/}
            {/*    Select and Upload File*/}
            {/*    <input*/}
            {/*        type="file"*/}
            {/*        accept="video/* audio/*"*/}
            {/*        onChange={handleFileChange}*/}
            {/*        className="absolute inset-0 opacity-0 cursor-pointer"*/}
            {/*    />*/}
            {/*</button>*/}

        </motion.section>
    )
}